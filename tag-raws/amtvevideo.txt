{set:code|}
{set:offset|0}
{set:banlist|[]}
{set:effects|["custom major 528","g major 91","t major","you wiggled x","split 2 pitches","custom ffmpeg","custom","custom major 528 ffmpeg","custom major 333 ffmpeg","simulator v19","simulator v19 ffmpeg","a major","x major 159","x major 159 ffmpeg","deaf x","blind x","g major","g major 0","g major 1","g major 2"]}
{set:banned|{py:import json
def check_item_in_json(json_data, item):
  try:
    if isinstance(json_data, str):
      json_data = json.loads(json_data)
 
    if item in json_data:
      return True
 
    if isinstance(json_data, dict):
      for value in json_data.values():
        if isinstance(value, (dict, list)):
          if check_item_in_json(value, item):
            return True
    elif isinstance(json_data, list):
      for value in json_data:
        if isinstance(value, (dict, list)):
          if check_item_in_json(value, item):
            return True
 
  except (json.JSONDecodeError, TypeError):
    return False
 
  return False
 
json_string = "{get:banlist}"
item_to_find = {id} 
 
if check_item_in_json(json_data=json_string, item=item_to_find):
  print(True)
else:
  print(False)}}
{if:{get:banned}|=|True|then:{mention:{id}} you are banned from AMTVEVideo and all of its tag aliases.|else:
{if:{argslen}|<|1|then:.t {tagname} <effect> <args...> <subcommand> <subcommand args>|else:-# Note: AMTVEVideo is in BETA!
{if:{arg:1}|!=|list|then:{choose:hey i feel so sprunki|《SPRUNKI》|☆TAT☆ FOUND AFTER 10 YEARS NO WAY|{repeat:30|{mention:{user}}}|have a bowl mr squidward|https://media.discordapp.net/attachments/1124758334805909509/1334274228219940877/now.gif?ex=679bef35&is=679a9db5&hm=50d94b4217555d74e7059e03ab50d29972e827410a99d1117f471095181209ff&}
}
{set:res|{py:args = {jsonify:{arg:0}}
effects = {get:effects}
if not args in effects:
    if args == "list" or args == "archive":
        print("n")
    else:
        print("y")
else:
    print("n")}}
{if:{get:res}|=|y|then:{js:console.error("Effect Does not exist.")}}{if:{arg:0}|=|archive|then:{attachtext:{text:https://wubboxcap.github.io/discord/tag-raws/amtvevideo.txt}}}{if:{arg:0}|=|list|then:-# {py:arr = {get:effects}
print(len(arr))} effects.}
{if:{arg:0}|=|custom major 528|then:{set:code|flip #
hueshifthsv # 90
invert #
waves # 6.5 0w/2.5 10
cover # 0w 0h
copy # #a
convert #a audio/wav
copy #a #b
audiopitch #a 2**(5/12)
audiopitch #b 2**(-2/12)
audioputmix # #a
volume #a
repeatduration #a #d
audioputreplace # #a}}
{if:{arg:0}|=|g major 91|then:{set:code|swaprgba # bgr
hueshifthsv # 180
haah #
distort # resize 512 512
rotate # -90
distort # arc 30 90
contain # 640 512
distort # bilinear_forward 88 70 -116 -74 60 303 -48 395 550 30 642 -24 553 382 642 368
distort # resize 0w 0h
copy # #$
convert #$ audio/wav
copy #$ #$p
audiopitch #$p 2**(1/12)
audioputmix #$ #$p
volume #$
repeatduration #$ #d
audioputreplace # #$}}
{if:{arg:0}|=|you wiggled x|then:{set:code|hueshifthsv # 60
haah #
wave # 10 w/8
cover # w h
rotate # 90
wave # 10 w/8
rotate # -90
cover # w h
copy # #a
convert #a audio/wav
audiopitch #a 2**(12/12)
audiopitch #a 2**(2/12)
repeatduration #a #d
audioputreplace # #a}}
{if:{arg:0}|=|simulator v19 ffmpeg|then:{set:code|-vf negate,huesaturation=-70:0.5:0:-100:100,format=yuv444p,scale=640:-1,"geq='p(X+sin(0/10+Y/28)*30,(Y+sin(0/10+X*1.9/100)*18))'","geq='p(X+sin(0/10+Y/28)*30,(Y+sin(0/10+X*1.9/100)*18))'",scale=iw:ih,format=yuv420p -filter_complex "[0:a]rubberband=formant=712923000:pitch=2^(-12/12)[a1];[0:a]rubberband=formant=712923000:pitch=2^(0/12)[a2];[0:a]rubberband=formant=712923000:pitch=2^(7/12)[a3];[a1][a2][a3]amix=3,volume=3,atrim=0.02[outa]" -map 0:v -map "[outa]"}}
{if:{arg:0}|=|simulator v19|then:{set:code|invert #
hueshifthsv # 284
rotate # 90
wave # 0h*0.05 0w/(5.4/1.667)
cover # 0h 0w
rotate # -90
wave # -0h*0.05 0w/(5.4/2.666)
cover # 0w 0h
copy # #a
convert #a audio/wav
copy #a #b
copy #a #c
audiopitch #b 2**(7/12)
audiopitch #c 2**(-12/12)
audioputmix #a #b
volume #a
audioputmix #a #c
volume #a
repeatduration #a #d
audioputreplace # #a}}
{if:{arg:0}|=|deaf x|then:{set:code|swaprgba # bgr
hueshifthsv # 208.79
invert #
offset # #w/1.75
explode #
offset # #w/-1.75
waaw #
copy # #a
convert #a audio/wav
copy #a #b
audiopitch #a 2**(12/12)
audiopitch #a 2**(10/12)
audiopitch #b 2**(12/12)
audiopitch #b 2**(12/12)
audioputmix #a #b
volume #a
repeatduration #a #d
audioputreplace # #a}}
{if:{arg:0}|=|blind x|then:{set:code|offset # #w/8 #h/12
implode # 0.35
offset # -#w/8 -#h/12
haah #
hueshifthsvffmpeg # 315
invert #
copy # #a
convert #a audio/wav
copy #a #b
audiopitch #a 2**(-5/12)
audiopitch #b 2**(-3/12)
audioputmix #a #b
volume #a
repeatduration #a #d
audioputreplace # #a}}
{if:{arg:0}|=|g major|then:{set:code|invert #
copy # #$
convert #$ audio/wav
copy #$ #$a
copy #$ #$b
copy #$ #$c
copy #$ #$d
copy #$ #$e
audiopitch #$ 2**(12/12)
audiopitch #$a 2**(7/12)
audiopitch #$b 2**(4/12)
audiopitch #$d 2**(-5/12)
audiopitch #$e 2**(-12/12)
audioputmix #$ #$a
volume #$
audioputmix #$ #$b
volume #$
audioputmix #$ #$c
volume #$
audioputmix #$ #$d
volume #$
audioputmix #$ #$e
volume #$
repeatduration #$ #d
audioputreplace # #$}}
{if:{arg:0}|=|g major 0|then:{set:code|hueshifthsv # 180
invert #
huecurvergba # all 0 1 0
copy # #a
convert #a audio/wav
copy #a #b
copy #a #c
audiopitch #a 2**(-10/12)
audiopitch #c 2**(10/12)
audioputmix #a #b
volume #a
audioputmix #a #c
volume #a
repeatduration #a #d
audioputreplace # #a}}
{if:{arg:0}|=|g major 1|then:{set:code|hueshifthsv # 180
invert #
copy # #a
convert #a audio/wav
audiopitch #a 2**(8/12)
repeatduration #a #d
audioputreplace # #a}}
{if:{arg:0}|=|g major 2|then:{set:code|invertrgba # 1 1 0
copy # #a
convert #a audio/wav
copy #a #b
copy #a #c
audiopitch #b 2**(4/12)
audiopitch #c 2**(-5/12)
audioputmix #a #b
volume #a
audioputmix #a #c
volume #a
repeatduration #a #d
audioputreplace # #a}}
{if:{arg:0}|=|t major|then:{set:code|invert #
audiopitch # 1.78
hueshifthsv # 201.6}}
{if:{arg:0}|=|split 2 pitches|then:{set:code|copy # #$
convert #$ audio/wav
copy #$ #$a
audiopitch #$ 2**({arg:1}/12)
audiopitch #$a 2**({arg:2}/12)
audioputmix #$ #$a
volume #$
repeatduration #$ #d
audioputreplace # #$}{set:offset|{math:{get:offset}+2}}}
{if:{arg:0}|=|custom ffmpeg|then:{set:code|{arg:1}}{set:offset|{math:{get:offset}+1}}}
{if:{arg:0}|=|custom|then:{set:code|{arg:1}}{set:offset|{math:{get:offset}+1}}}
{if:{arg:0}|=|custom major 528 ffmpeg|then:{set:code|-vf format=yuv444p,scale=iw:ih,"geq='p(X,floor(Y+sin(T*250/10+X*2.5/100)*4.5))'",huesaturation=90:0:0:-100:100,negate,vflip,scale=iw:ih,format=yuv420p -filter_complex "[0:a]rubberband=pitch=2^(5/12)[a1];[0:a]rubberband=pitch=2^(-2/12)[a2];[a1][a2]amix=2,volume=2[outa]" -map 0:v -map "[outa]" -pix_fmt yuv420p}}
{if:{arg:0}|=|custom major 333 ffmpeg|then:{set:code|-vf negate,rotate=-0.03,unsharp -filter_complex "[0:a]rubberband=pitch=2^(0/12)[a1];[0:a]rubberband=pitch=2^(-0.2/12)[a2];[a1][a2]amix=2,volume=2[outa]" -map 0:v -map "[outa]"}}
{if:{arg:0}|=|x major 159|then:{set:code|gray #
huecurvergba # red 1 1 0
huecurvergba # green 1 0 0
huecurvergba # blue 1 1 0
copy # #a
audiopitch # 1.5
audiopitch #a 0.75
overlay # #a
volume #}}
{if:{arg:0}|=|x major 159 ffmpeg|then:{set:code|-vf negate,hue=s=0,colorchannelmixer=1:0:1:0:0:1:0:0:1:0:1:0:1:1:1:1,hue=s=3 -filter_complex "[0:a]rubberband=formant=712923000:pitch=2^(-5/12)[a1];[0:a]rubberband=formant=712923000:pitch=2^(7/12)[a2];[a1][a2]amix=2,volume=2,atrim=0.02[outa]" -map 0:v -map "[outa]"}}
{if:{arg:0}|=|a major|then:{set:code|waaw #
swirl # 130
invert #
hueshifthsv # 153
copy # #a
convert #a audio/wav
copy #a #b
audiopitch #a 2**(5.73/12)
audiopitch #b 2**(10.5/12)
audioputmix #a #b
volume #a
repeatduration #a #d
audioputreplace # #a}}
{if:{indexof:ffmpeg|{arg:0}}|!=|-1|then:{if:{arg:{math:{get:offset}+1}}|=|raw|then:{py:import json as js
icon = "{avatar}"
auth = "{user}#{discrim}"
content = '''```{get:code}```'''
json = {"embed":{"title":"Code","description":content,"color":0x00dc64,"author":{"name":auth,"icon_url":icon}}}
print(js.dumps(json))}|else:{if:{arg:{math:{get:offset}+1}}|=|ihtx|then:{set:powers|{or:{arg:{math:{get:offset}+2}}|10}}{set:time|{or:{if:{arg:{math:{get:offset}+3}}|=|true|then:$vidlen|else:{arg:{math:{get:offset}+3}}}|0.5}}{set:render|load {media}
vidlen=$(ffprobe -i $FILE_1 -show_entries format=duration -v quiet -of csv="p=0")
ffmpeg -i $FILE_1 {get:code} -t {get:time} 1.ts
{replace:code|{get:code}|{replace:time|{get:time}|{js:for (let i = 0; i < {get:powers}-1; i++) {
console.log(`ffmpeg -i "${i+1}.ts" code -t time ${i+2}.ts`);
}}}}
{set:#|0}
ffmpeg -i "concat:{foreach:{math:{get:powers}-1}|{set:#|{math:{get:#}+1}}{get:#}.ts\u007c}{get:powers}.ts" ./output/ihtx.mp4}{sh:{js:console.log(`{get:render}`);}}|else:{if:{arg:{math:{get:offset}+1}}|=|multiplier|then:{set:powers|{or:{arg:{math:{get:offset}+2}}|2}}{set:render|load {media}
vidlen=$(ffprobe -i $FILE_1 -show_entries format=duration -v quiet -of csv="p=0")
ffmpeg -i $FILE_1 {get:code} -t $vidlen 1.ts
{replace:code|{get:code}|{js:for (let i = 0; i < {get:powers}-1; i++) {
console.log(`ffmpeg -i "${i+1}.ts" code -t $vidlen ${i+2}.ts`);
}}}
{set:#|0}
ffmpeg -i "{get:powers}.ts" ./output/multiplier.mp4}{sh:{js:console.log(`{get:render}`);}}|else:{sh:load {media}
ffmpeg -i $FILE_1 {get:code} ./output/amtvevideo.mp4}}}}|else:{if:{arg:{math:{get:offset}+1}}|=|raw|then:{py:import json as js
icon = "{avatar}"
auth = "{user}#{discrim}"
content = '''```{replace:#|{or:{arg:{math:{get:offset}+2}}|#}|{get:code}}```'''
json = {"embed":{"title":"Code","description":content,"color":0x00dc64,"author":{"name":auth,"icon_url":icon}}}
print(js.dumps(json))}|else:{if:{arg:{math:{get:offset}+1}}|=|ihtx|then:{set:powers|{or:{arg:{math:{get:offset}+2}}|10}}{set:#|0}
{iscript:load {iv} 0
{if:{arg:{math:{get:offset}+3}}|!=|true|then:snip 0 0 {or:{arg:{math:{get:offset}+3}}|0.5}}
copy 0 1
{foreach:{get:powers}|{set:#|{math:{get:#}+1}}
{replace:#|{get:#}|{get:code}}
copy {get:#} {math:{get:#}+1}
}
{set:#|0}
concatmultiple{foreach:{get:powers}|{set:#|{math:{get:#}+1}} {get:#}}
render 1}|else:{set:result|{py:args = {jsonify:{arg:0}}
effects = {get:effects}
if args == "list" or args == "archive" or not args in effects:
    print("y")
else:
    print("n")}}{if:{get:result}|=|n|then:{iscript:load {media} 0
copy 0 1
{replace:#|1|{get:code}}
render 1 default amtvevideo}}}}}}
}
